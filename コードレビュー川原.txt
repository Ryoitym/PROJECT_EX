■category_delete.php(delete系全般か)
分類がすでに生鮮食品に紐づいている場合削除でき無さそう
外部キー違反で削除できない

■category_insert.php
文字数制限のチェックが入っていない

■全体的に（category_insert.phpなど）
viewをrequire_onceした後にphするのではなく、
変数に表示したいことを入れ、viewをrequire_once、viewで変数を表示
コントローラで表示は基本しない

■category_list_admin.php(list系全般か)
19行目:$_SESSION["acess_lv"]が無いときエラーが出そう
else側の処理：それ用のviewを作って表示する

■category_update.php
32行目:genre_idはGETで渡す作戦？？
72行目:間違っていそう

■food_insert.php
入力チェックが全体的に甘い

■login.php
46,64行目:コントローラでprintしている（他のファイルも多々ある）
55,57行目：viewに直接リダイレクトしている（他のファイルも多々あるheaderで検索）

■shop_update.php
店舗名しか変更できなさそう

■special_price_food_update.php
16行目:ディレクトリは\ではなく/で書いたほうがよい

■user_insert.php
メールアドレスは重複可？メールアドレス以外の項目が違う場合は登録できそう。

---------- 以下、25日（土）追記 ----------
途中っぽいファイルは無視してます

■lib/view/category/view_category_delete.php
修正済み 26行目:<form>タグはブロックレベル要素なので後ろに改行は不要。余白を取りたいのであればCSSで。
　　　　このファイルだけではなく、全体的に。

■lib/view/category/view_category_list.php（list系全般か）
48行目付近:編集画面への遷移はGETの方が良い（POSTでも良いので修正は不要）
　　　　　更新系DB処理をするときにPOSTにしたほうが良いが、更新系処理が走るのは入力画面で登録ボタンが押されたとき。ここはPOSTにする。
　　　　　一覧画面→編集入力画面→確認画面→完了画面の遷移であった場合
　　　　　POSTの場合、確認画面からブラウザの戻るボタンで戻りにくい。

54行目付近:削除は更新系の処理なのでPOSTでしたいという意図であれば、この書き方はおかしい。
          category_delete.php?genre_id=1
          のようにURLに消したいデータを入れているのでGETで操作している。
          POSTでしたいのであれば、フォーム部品にデータをセットして送信する。
          例：これでgenre_id:1がPOSTされる
          <form action="category_delete.php" method="post">
             <input type="hidden" name="genre_id" value="1">
             <input type="submit" value="削除">
          </form>

全体的に、POSTでやりたいのかGETでやりたいのか統一されていない印象。
GETでやる場合はリンクでできるという考えももつこと。

■lib/view/food/view_food_delete.php
途中？
削除していいですか？のJavaScriptの処理はlist側に書く。

■lib/view/food/view_food_insert.php
分類は固定ではなく、genreテーブルのデータを表示したいはず

■lib/view/food/view_food_list_admin.php
40行目付近:ここもあえてPOSTでする必要性はなく、ただのリンクでよい。
72行目：0,1が表示されてしまいそう。今この食品が「表示」なのか「非表示」なのかを表示したいのでは。
73行目:IDではなく、分類名を表示したいのでは。

■lib/view/shop/view_shop_list_admin.php
29~43行目:viewに書くことではない。controllerかmodelに書く。

■lib/view/shop/view_shop_update.php
24~51行目:viewに書くことではない。controllerかmodelに書く。
74行目:不要に見える

■lib/view/special_price/view_special_price_food_insert.php
その他のファイルも含め全体
　例えば19,20行目。
　XSS対策が必要。DBの中のデータもタグは入っていることはある。
  そもそもviewでprintするときは全部対策しておくべき。

29行目:何日先までの特価を入力できるかという8のようなデータ（即値と言う）は後から読むと分からない。
　　　　init.phpでわかりやすい定数にしておくのが定石
　　　　define("SPECIAL_PRICE_DATE_RANGE", 8); // 特価品は8日先まで入力できる

■lib/view/user/view_user_insert.php
店舗名は固定ではなくデータベースから
35行目等:</option>の後ろに<br>は不要。というかあったらダメ。
